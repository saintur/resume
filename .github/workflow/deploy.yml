# .github/workflows/deploy.yml
name: Deploy Angular to GitHub Pages

on:
  push:
    branches:
      - gh-pages # Change this to your main branch name if it's not 'main'

# Grant GITHUB_TOKEN the permissions required to make a Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your desired Node.js version, e.g., '18', '20', '22'
          cache: 'npm' # Caches npm dependencies to speed up builds

      - name: Install dependencies
        run: npm ci # Use 'npm ci' for clean installs in CI environments

      - name: Build Angular application
        # Replace 'your-repo-name' with your actual GitHub repository name
        # The --output-path must match the 'path' in the 'upload-pages-artifact' step
        run: ng build --base-href=/${{ github.event.repository.name }}/ --configuration production
        # If your GitHub Pages is served from the root (e.g., username.github.io):
        # run: ng build --base-href=/ --configuration production
        
      - name: Add .nojekyll file (important for SPAs)
        run: touch ./dist/resume/browser/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./dist/resume/browser # This path must match your Angular build output path

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
